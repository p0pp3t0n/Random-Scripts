#!/bin/bash
#
# Script will query the system via dpkg-query to get a list of all the
# binaries on the system and will do a searchsploit search for all of them.
#
# This is not meant to be 100% accurate. It's just a simple script to give you
# an idea on the binaries that have known exploits.

progLocation="/home/p0pp3t/Git/exploit-database/searchsploit"
listPKG=$(dpkg-query -f '${Package} ${Version}\n' -W)

# Clear file
> final

IFS=$'\n'

# Reading all lines in the dpkg query
for i in $(cat /home/p0pp3t/bin/files.txt)
do

    software=$(echo $i | cut -d " " -f1)
    version=$(echo $i | cut -d " " -f2 | sed -e "s/^.*://" | sed -e "s/\-.*//" | sed -e "s/\+.*//")
    versionCleaned=$(echo $version | cut -d " " -f2 | grep -o -e "[0-9]*\.[0-9]*\.[0-9]*" -e "[0-9]*\.[0-9]*" -e "[0-9]*" )

    result=$($progLocation "$software $versionCleaned" --color -j)

    #Check if there's an exploit
    id=$( echo "$result" | grep 'Exploit')

    if [ -n "$id" ]; then
        search=$(echo "$result" | grep 'SEARCH' | cut -d "," -f1 | cut -d ":" -f2 )
        searchTitle="Search: "$search""
        searchLen=${#searchTitle} 
        searchPrint=$(yes - | head -"$searchLen" | tr -d "\n")
        echo "" >> final
        echo "$searchTitle" >> final
        echo "$searchPrint" >> final


    fi

    for i in $(echo "$result")
    do
    
    exploit=$(echo "$i" | grep 'Exploit' )
    exploitName=$( echo "$exploit" | cut -d "," -f1 | cut -d ":" -f2)
    exploitPlatform=$( echo "$exploit" | cut -d "," -f2 | cut -d ":" -f2)
    exploitType=$( echo "$exploit" | cut -d "," -f3 | cut -d ":" -f2)
    exploitPath=$( echo "$exploit" | cut -d "," -f5 | cut -d ":" -f2)

    if [ -n "$exploitName" ]; then

        echo ""$exploitName" | "$exploitPlatform" | "$exploitType" | "$exploitPath"" >> final
        echo "Found exploits for " + "$search"

    fi

    echo "$exploitName"

    done


done
